{{!-- Citation for the following function:--}}
{{!-- Date: 5/23/2023 --}}
{{!-- Adapted from: nodejs-starter app on github step 3: Integrating a Templating Engine (handelbars)--}}
{{!-- https://github.com/osu-cs340-ecampus/nodejs-starter-app/tree/main/Step%203%20-%20Integrating%20a%20Templating%20Engine%20(Handlebars)} --}}

{{!-- Citation for the following function:--}}
{{!-- Date: 5/23/2023 --}}
{{!-- Adapted from: nodejs-starter app on github step 4: Dynamically Displaying Data--}}
{{!-- https://github.com/osu-cs340-ecampus/nodejs-starter-app/tree/main/Step%204%20-%20Dynamically%20Displaying%20Data)} --}}

{{!-- Citation for the following function:--}}
{{!-- Date: 5/23/2023 --}}
{{!-- Adapted from: OSUC-CS 340 ecampus node js starter app instructions: step 5 / adding new data--}}
{{!-- https://github.com/osu-cs340-ecampus/nodejs-starter-app/tree/main/Step%205%20-%20Adding%20New%20Data --}}

{{!-- Citation for the following function:--}}
{{!-- Date: 5/10/2023 --}}
{{!-- Adapted from: nodejs-starter-app Step 6: Dynamically FIlling Dropdowns and Adding a Search Bar--}}
{{!-- https://github.com/osu-cs340-ecampus/nodejs-starter-app/tree/main/Step%204%20-%20Dynamically%20Displaying%20Data --}}

{{!-- Citation for the following function:--}}
{{!-- Date: 5/23/2023 --}}
{{!-- Adapted from: OSUC-CS 340 ecampus node js starter app instructions: step 7 Dynamically Deleting Data--}}
{{!-- https://github.com/osu-cs340-ecampus/nodejs-starter-app/tree/main/Step%207%20-%20Dynamically%20Deleting%20Data --}}

{{!-- Citation for the following function:--}}
{{!-- Date: 5/24/2023 --}}
{{!-- Adapted from: nodejs-starter-app Step 8: Dynamically Updating Data--}}
{{!-- https://github.com/osu-cs340-ecampus/nodejs-starter-app/tree/main/Step%204%20-%20Dynamically%20Displaying%20Data --}}

{{!-- <head>
    <meta charset='utf-8'>
    <meta http-equiv='X-UA-Compatible' content='IE=edge'>
    <meta name="robots" content="noindex, noarchieve, nofollow">
    <title>TOFU| Classes</title>
    <meta name='viewport' content='width=device-width, initial-scale=1'>
    <link rel='stylesheet' type='text/css' media='screen' href='./css/style.css'>
    <script src='main.js'></script>
</head>
  <body onload="browseClasses()">
    <header>
        <h1>The Online Fake University</h1>
    </header>
    <nav>
        <a href="/">Home</a>
        <a href="/students">Students</a>
        <a href="/professors">Professors</a>
        <a href="/enrollmentdetails">Enrollment Details</a> 
        <a href="/classes">Classes</a>
        <a href="/departments">Departments</a>
        <a href="/terms">Terms</a>
        <a href="/majors">Majors</a> 
        <a href="/termclassdetails">Term Class Details</a>
    </nav> --}}

{{!-- Citation for the following function:--}}
{{!-- Date: 5/10/2023 --}}
{{!-- Adapted from: nodejs-starter-app Step 6: Dynamically FIlling Dropdowns and Adding a Search Bar--}}
{{!-- https://github.com/osu-cs340-ecampus/nodejs-starter-app/tree/main/Step%204%20-%20Dynamically%20Displaying%20Data --}}

{{!-- script to use jQuery to dynamically delete --}}
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
<main>
    <section>
        <h2>Classes</h2>
        <article>
            <table id = "classes-table">
            <thead>
                <tr>
                    <th>Class ID</th>
                    <th>Class Name</th>
                    <th>Class Credits</th>
                    <th>Professor</th>
                    <th>Department</th>
                    <th>Delete</th>
                </tr>
            </thead>

            <tbody>

                {{#each data}}
                <tr>
                    <td>{{this.classID}}</td>
                    <td>{{this.className}}</td>
                    <td>{{this.classCredits}}</td>
                    <td>{{this.professorID}}</td>
                    <td>{{this.deptID}}</td>
                    <td><button onclick="deleteClass({{this.classID}})">Delete</button></td>
                </tr>
                {{/each}}
            </tbody>
        </table>
        <script src="./js/delete_class.js"></script>
        </article>

        <article>

{{!-- Citation for the following function:--}}
{{!-- Date: 5/23/2023 --}}
{{!-- Adapted from: w3 docs --}}
{{!--Used this to set a min and/or a max for numbers that could be entered)}}
{{!--https://www.w3docs.com/snippets/html/how-to-allow-only-positive-numbers-in-the-input-number-type.html}} --}}

{{!-- Citation for the following function:--}}
{{!-- Date: 6/11/23 --}}
{{!-- Adapted from: stackoverflow: Change text from "submit" on input tag--}}
{{!--change text on submit button on pages to accuragely refelct function of click)}}
{{!--https://stackoverflow.com/questions/14007613/change-text-from-submit-on-input-tag}} --}}

{{!-- Form to add a a new class; form ID matches the JS --}}
            <h2>Add a class</h2>
            <p>To add a new class, please enter the information below and click 'Add Class'</p>
            <form id="add-class-form-ajax">
                {{!-- get input values to pass on to the js --}}
                <label for="input-className">Class Name: </label>
                <input type="text" name="input-className" id="input-className" placeholder="Class Name">
                
                <label for="input-classCredits">Class Credits: </label>
                <input type="number" min="0" name="input-classCredits" id="input-classCredits">

                <label for="input-professorID">Professor ID: </label>
                <select name="input-professorID" id="input-professorID">
                    <option>Select a Professor</option>
                    {{#each professors}}
                    <option value="{{this.professorID}}">{{this.firstName}} {{this.lastName}}</option>
                    {{/each}}
                </select>

                <label for="input-deptID">Department ID: </label>
                    <select name="input-deptID" id="input-deptID">
                    <option> Select a Department </option>
                    {{#each departments}}
                    <option value="{{this.deptID}}">{{this.deptName}}</option>
                    {{/each}}
                </select>

                <input type="Submit" value = "Add Class">
            </form>

            {{!-- Embed our javascript to handle the DOM manipulation and AJAX request --}}
            <script src="./js/add_class.js"></script>

        </article>
        <article>

            <h2>Updating A Class</h2>
            <p>To update a specific class, please enter the information below and click "Update Class"</p>
            <form id="update-class-form-ajax">
            
                <label for="input-classID">Class ID: </label>
                <select name="input-classID" id="mySelect">
                    {{!-- selects a class from a drop down menu --}}
                    <option>Select a Class</option>
                    {{#each data}}
                    <option value="{{this.classID}}">{{this.classID}}</option>
                    {{/each}}
                </select>

                <label for="input-className">Class Name: </label>
                <input type="text" name="input-className" id="input-className-update" placeholder="Class Name">

                <label for="input-classCredits">Class Credits: </label>
                <input type="number" name="input-classCredits" id="input-classCredits-update"> 

                <label for="input-professor"> Professor: </label>
                {{!-- selects professor (FK) from a drop down menu --}}
                <select name="input-professor" id="input-professor-update">
                    <option> </option>
                    {{#each professors}}
                    <option value="{{this.professorID}}">{{this.firstName}} {{this.lastName}}</option>
                    {{/each}}
                </select>

                <label for="input-department">Department: </label>
                {{!-- selects department (FK) from a drop down menu --}}
                <select name="input-department" id="input-department-update">
                    <option> </option>
                    {{#each departments}}
                    <option value="{{this.deptID}}">{{this.deptName}}</option>
                    {{/each}}
                </select>
                <input type="submit" value = "Update Class">

            </form>

            <script src="./js/update_class.js"></script>
        </article>
    </section>
</main>





